///
/// HybridMapboxNavigationViewManagerRegistrySpec.hpp
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2024 Marc Rousavy @ Margelo
///

#pragma once

#include <NitroModules/JHybridObject.hpp>
#include <fbjni/fbjni.h>
#include "HybridMapboxNavigationViewManagerRegistrySpec.hpp"




namespace margelo::nitro::iplastudio::mapboxnavigation {

  using namespace facebook;

  class JHybridMapboxNavigationViewManagerRegistrySpec: public jni::HybridClass<JHybridMapboxNavigationViewManagerRegistrySpec, JHybridObject>,
                                                        public virtual HybridMapboxNavigationViewManagerRegistrySpec {
  public:
    static auto constexpr kJavaDescriptor = "Lcom/margelo/nitro/iplastudio/mapboxnavigation/HybridMapboxNavigationViewManagerRegistrySpec;";
    static jni::local_ref<jhybriddata> initHybrid(jni::alias_ref<jhybridobject> jThis);
    static void registerNatives();

  protected:
    // C++ constructor (called from Java via `initHybrid()`)
    explicit JHybridMapboxNavigationViewManagerRegistrySpec(jni::alias_ref<jhybridobject> jThis) :
      HybridObject(HybridMapboxNavigationViewManagerRegistrySpec::TAG),
      _javaPart(jni::make_global(jThis)) {}

  public:
    size_t getExternalMemorySize() noexcept override;

  public:
    inline const jni::global_ref<JHybridMapboxNavigationViewManagerRegistrySpec::javaobject>& getJavaPart() const noexcept {
      return _javaPart;
    }

  public:
    // Properties
    

  public:
    // Methods
    std::shared_ptr<margelo::nitro::iplastudio::mapboxnavigation::HybridMapboxNavigationViewManagerSpec> createViewManager(double nitroId) override;

  private:
    friend HybridBase;
    using HybridBase::HybridBase;
    jni::global_ref<JHybridMapboxNavigationViewManagerRegistrySpec::javaobject> _javaPart;
  };

} // namespace margelo::nitro::iplastudio::mapboxnavigation
